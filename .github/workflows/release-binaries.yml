name: Release ðŸš€

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - src/**
      - Cargo.toml

env:
  CARGO_TERM_COLOR: always

jobs:
  release-x86_64:
    name: Release x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(grep "^version" Cargo.toml | awk '{print $3}' | tr -d '"')

      - name: Install dependencies
        run: sudo apt-get update -y && sudo apt-get install -y musl-tools

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          
      - name: Install target
        run: rustup target add x86_64-unknown-linux-musl
        
      - name: Build for x86_64
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=x86_64-unknown-linux-musl

      - name: Upload x86_64 Binary
        uses: actions/upload-artifact@v4
        with:
          name: adguardian-x86_64
          path: ./target/x86_64-unknown-linux-musl/release/adguardian

  release-arm-v7:
    name: Release ARM V7
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(grep "^version" Cargo.toml | awk '{print $3}' | tr -d '"')

      - name: Install dependencies
        run: sudo apt-get update -y && sudo apt-get install -y gcc-arm-linux-gnueabihf

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: armv7-unknown-linux-gnueabihf
          
      - name: Install cross
        run: cargo install cross
        
      - name: Build for ARM V7
        run: cross build --target=armv7-unknown-linux-gnueabihf --release
        
      - name: Upload ARM V7 Binary
        uses: actions/upload-artifact@v4
        with:
          name: adguardian-arm-v7
          path: ./target/armv7-unknown-linux-gnueabihf/release/adguardian

  release-arm64:
    name: Release ARM64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(grep "^version" Cargo.toml | awk '{print $3}' | tr -d '"')

      - name: Install cross
        run: cargo install cross

      - name: Install aarch64 target
        run: rustup target add aarch64-unknown-linux-gnu

      - name: Build for ARM64
        run: cross build --target aarch64-unknown-linux-gnu --release

      - name: Upload ARM64 Binary
        uses: actions/upload-artifact@v4
        with:
          name: adguardian-arm64
          path: ./target/aarch64-unknown-linux-gnu/release/adguardian


  release-macos:
    name: Release MacOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(grep "^version" Cargo.toml | awk '{print $3}' | tr -d '"')

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build for MacOS
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Upload MacOS Binary
        uses: actions/upload-artifact@v4
        with:
          name: adguardian-macos
          path: ./target/release/adguardian

  release-windows:
    name: Release Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the version
        id: get_version
        run: echo "::set-output name=VERSION::$(grep '^version' Cargo.toml | awk '{print $3}' | tr -d '"')"

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build for Windows
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Upload Windows Binary
        uses: actions/upload-artifact@v4
        with:
          name: adguardian-windows
          path: ./target/release/adguardian.exe

  create-release:
    name: Create Release
    needs: [release-x86_64, release-arm-v7, release-arm64, release-macos, release-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(grep "^version" Cargo.toml | awk '{print $3}' | tr -d '"')

      - name: Update or Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body_path: ./.github/CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Download x86_64 Binary
        uses: actions/download-artifact@v4
        with:
          name: adguardian-x86_64
          path: ./target/x86_64-unknown-linux-musl/release/

      - name: Download ARM V7 Binary
        uses: actions/download-artifact@v4
        with:
          name: adguardian-arm-v7
          path: ./target/armv7-unknown-linux-gnueabihf/release/

      - name: Download ARM64 Binary
        uses: actions/download-artifact@v4
        with:
          name: adguardian-arm64
          path: ./target/aarch64-unknown-linux-gnu/release/

      - name: Download MacOS Binary
        uses: actions/download-artifact@v4
        with:
          name: adguardian-macos
          path: ./target/release/

      - name: Download Windows Binary
        uses: actions/download-artifact@v4
        with:
          name: adguardian-windows
          path: ./target/release/

      - name: Upload x86_64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/x86_64-unknown-linux-musl/release/adguardian
          asset_name: adguardian-x86_64
          asset_content_type: application/octet-stream

      - name: Upload ARM V7 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/armv7-unknown-linux-gnueabihf/release/adguardian
          asset_name: adguardian-arm-v7
          asset_content_type: application/octet-stream
      
      - name: Upload ARM64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/aarch64-unknown-linux-gnu/release/adguardian
          asset_name: adguardian-arm64
          asset_content_type: application/octet-stream
      
      - name: Upload MacOS Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/adguardian
          asset_name: adguardian-macos
          asset_content_type: application/octet-stream

      - name: Upload Windows Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/adguardian.exe
          asset_name: adguardian-windows.exe
          asset_content_type: application/octet-stream
